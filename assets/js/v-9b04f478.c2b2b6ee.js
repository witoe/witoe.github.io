"use strict";(self.webpackChunkblog2=self.webpackChunkblog2||[]).push([[9424],{8029:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-9b04f478",path:"/javascript/misc.html",title:"Misc",lang:"en-US",frontmatter:{title:"Misc"},excerpt:"",headers:[],filePathRelative:"javascript/misc.md",git:{updatedTime:163774408e4,contributors:[{name:"guyong",email:"jcel@qq.com",commits:1}]}}},4832:(e,n,s)=>{s.r(n),s.d(n,{default:()=>d});var a=s(6252);const t={href:"http://api.jquery.com",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Uk)("jquery"),r={href:"http://www.w3schools.com/jquery/default.asp",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Uk)("w3 tutorial"),l={href:"http://underscorejs.org/",target:"_blank",rel:"noopener noreferrer"},i=(0,a.Uk)("underscore"),p=(0,a.uE)('<p>In fact, there is no &quot;constructor&quot; function, there is only &quot;constructive call&quot;.</p><p>Inheritance is essentially copying.</p><p>In javascript, there are mainly 7 types:</p><ul><li>number</li><li>boolean</li><li>string</li><li>null</li><li>undefined</li><li>symbol</li><li>object</li></ul><p>copy value vs. copy reference: For <code>object</code> (including <code>function</code>, <code>array</code>), assignments pass reference; for others (scalar types), assignments pass values.</p><p>variable vs. value javacript中变量没有类型，只有值才有类型。 给变量赋值只会改变该变量的指向，不会改变原指向的值。 undefined vs. undeclared (Reference Error) <code>typeof &lt;undeclared&gt;</code>有安全保护</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token constant">DEBUG</span> <span class="token operator">!=</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n<span class="token comment">//...</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>string</code> type is inmutable. <code>undefined</code> 指从未赋值 <code>null</code> 指曾赋过值，但是当前值为空 <code>null</code>是关键字，不能作为identifier, 而<code>undefined</code>可以</p><p><code>NaN</code> 是<code>number</code>类型, 唯一非自反的值 （<code>NaN !=NaN</code>)</p>',9),u={},d=(0,s(3744).Z)(u,[["render",function(e,n){const s=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[(0,a._)("ol",null,[(0,a._)("li",null,[(0,a._)("a",t,[o,(0,a.Wm)(s)]),(0,a._)("a",r,[c,(0,a.Wm)(s)])]),(0,a._)("li",null,[(0,a._)("a",l,[i,(0,a.Wm)(s)])])]),p],64)}]])},3744:(e,n)=>{n.Z=(e,n)=>{const s=e.__vccOpts||e;for(const[e,a]of n)s[e]=a;return s}}}]);