"use strict";(self.webpackChunkblog2=self.webpackChunkblog2||[]).push([[1485],{3417:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-77b75d28",path:"/python/miscs.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"The Python Interpreter",slug:"the-python-interpreter",children:[]},{level:2,title:"Pitfalls",slug:"pitfalls",children:[{level:3,title:"index, slice",slug:"index-slice",children:[]},{level:3,title:"list is mutable",slug:"list-is-mutable",children:[]}]}],filePathRelative:"python/miscs.md",git:{updatedTime:163774408e4,contributors:[{name:"guyong",email:"jcel@qq.com",commits:1}]}}},8876:(e,n,s)=>{s.r(n),s.d(n,{default:()=>u});var a=s(6252);const t=(0,a.uE)('<h2 id="the-python-interpreter" tabindex="-1"><a class="header-anchor" href="#the-python-interpreter" aria-hidden="true">#</a> The Python Interpreter</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">3</span><span class="token operator">//</span><span class="token number">2</span>\n<span class="token operator">-</span><span class="token number">2</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> _ <span class="token operator">**</span> <span class="token number">2</span>\n<span class="token number">4</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="pitfalls" tabindex="-1"><a class="header-anchor" href="#pitfalls" aria-hidden="true">#</a> Pitfalls</h2><h3 id="index-slice" tabindex="-1"><a class="header-anchor" href="#index-slice" aria-hidden="true">#</a> index, slice</h3><p><code>s[-1]</code> equals <code>s[len(s)-1]</code>, it does not cause error.</p><h3 id="list-is-mutable" tabindex="-1"><a class="header-anchor" href="#list-is-mutable" aria-hidden="true">#</a> list is mutable</h3><p>Thread</p><ul><li>Lock 即 Mutex, RLock 是一种特殊的Lock, 在同一线程中可多次获取（需多次释放），支持 acquire() 和 release()</li><li>Condition是由一个主Lock (可以是RLock)和若干个 Waiter Lock 组成，除acquire(), release()外还支持wait(), notify()</li><li>Semaphore 是带counter的Condition</li><li>Event是Condition的一个adaptor，支持set(), wait(), clear()</li><li>Queue 是由若干个Contiiton实现的queue, 支持 put(), get(), task_done(), join()</li></ul>',8),r={href:"http://www.laurentluce.com/posts/python-threads-synchronization-locks-rlocks-semaphores-conditions-events-and-queues/",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Uk)("Python threads synchronization: Locks, RLocks, Semaphores, Conditions, Events and Queues"),l={href:"http://sahandsaba.com/understanding-asyncio-node-js-python-3-4.html",target:"_blank",rel:"noopener noreferrer"},i=(0,a.Uk)("Understanding Asynchronous IO With Python 3.4's Asyncio And Node.js"),p={href:"https://segmentfault.com/a/1190000000471602",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Uk)("Python 开源异步并发框架的未来 "),d=(0,a.Uk)("(2014年4月)"),h={},u=(0,s(3744).Z)(h,[["render",function(e,n){const s=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[t,(0,a._)("p",null,[(0,a._)("a",r,[o,(0,a.Wm)(s)])]),(0,a._)("p",null,[(0,a._)("a",l,[i,(0,a.Wm)(s)]),(0,a._)("a",p,[c,(0,a.Wm)(s)]),d])],64)}]])},3744:(e,n)=>{n.Z=(e,n)=>{const s=e.__vccOpts||e;for(const[e,a]of n)s[e]=a;return s}}}]);