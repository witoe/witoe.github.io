"use strict";(self.webpackChunkblog2=self.webpackChunkblog2||[]).push([[474],{3521:(e,t,r)=>{r.r(t),r.d(t,{data:()=>o});const o={key:"v-430f53ff",path:"/algorithm/CLRS%20solutions.html",title:"CLRS Solutions",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"24.3-4",slug:"_24-3-4",children:[]}],filePathRelative:"algorithm/CLRS solutions.md",git:{updatedTime:163774408e4,contributors:[{name:"guyong",email:"jcel@qq.com",commits:1}]}}},8706:(e,t,r)=>{r.r(t),r.d(t,{default:()=>i});const o=(0,r(6252).uE)('<h1 id="clrs-solutions" tabindex="-1"><a class="header-anchor" href="#clrs-solutions" aria-hidden="true">#</a> CLRS Solutions</h1><h3 id="_24-3-4" tabindex="-1"><a class="header-anchor" href="#_24-3-4" aria-hidden="true">#</a> 24.3-4</h3><p>First check wheter $(d,\\pi)$ compose an <strong>$s$-rooted tree</strong>.(i.e. they satisfy properties 1 and 2 in page 647.) Then check that $d(s)=0$ and for all $v\\in V$, $d(v) = \\min_{u\\in N(v)}{d(u)+w(u,v)}$ and $\\pi(v)$ is the minimizer, where $N(v) = {u\\in V\\ |\\ (u,v)\\in E}$. If all are true, return true, otherwise return false. It can be easily seen that the total time is $O(m+n)$.</p><p>Now to prove the correctness. For one direction, if $(d,\\pi)$ match one <strong>shortest-paths tree</strong>, our algorithm must output true. For the other direction, suppose $(d,\\pi)$ doesn&#39;t match any such tree and the algorithm output true. Suppose $T&#39;=(\\pi&#39;,\\delta)$ is a <strong>shortest-paths tree</strong>. For all incorrect vertex $v$, we must have $d(v)&gt;\\delta(v)$ since we can really find a path of length $d(v)$ from $s$ to $v$ according to $\\pi$. There must be at least one incorrect vertex. Let $v$ be an incorrect vertex closest to $s$ in $T&#39;$. Then $u_1=\\pi(v)$ and $u_2 = \\pi&#39;(v)$ exist since $v$ can not be $s$. Therefore we have $d(u_1)+w(u_1,v)=d(v)&gt;\\delta(v)=d(u_2)+w(u_2,v)$ since $u_2$ is correct, which contradicts the fact that $u_1$ is the minimizer of $d(u)+w(u,v)$.</p><blockquote><p>It seems that this algorithm works for negative edges, doesn&#39;t it?</p></blockquote>',5),s={},i=(0,r(3744).Z)(s,[["render",function(e,t){return o}]])},3744:(e,t)=>{t.Z=(e,t)=>{const r=e.__vccOpts||e;for(const[e,o]of t)r[e]=o;return r}}}]);