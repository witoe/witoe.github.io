"use strict";(self.webpackChunkblog2=self.webpackChunkblog2||[]).push([[3427],{9374:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-06ea5782",path:"/python/scope.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"python/scope.md",git:{updatedTime:163774408e4,contributors:[{name:"guyong",email:"jcel@qq.com",commits:1}]}}},1875:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<p>scope, context, closure</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">numb</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> i<span class="token operator">*</span>k\nk <span class="token operator">=</span> <span class="token number">2</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span>numb<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 6</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>nonlocal</code> can be used to bind variables in the nearest outer scope. It cannot bind global variables.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    i <span class="token operator">=</span> <span class="token number">1</span>\n    j <span class="token operator">=</span> <span class="token number">2</span>\n    k <span class="token operator">=</span> <span class="token number">5</span>\n    <span class="token keyword">def</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">nonlocal</span> j\n        j <span class="token operator">=</span> <span class="token number">3</span>\n        <span class="token keyword">print</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token comment"># 3</span>\n        <span class="token keyword">def</span> <span class="token function">f3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n            <span class="token keyword">nonlocal</span> j<span class="token punctuation">,</span>k\n            j <span class="token operator">=</span> <span class="token number">4</span>\n            k <span class="token operator">=</span> <span class="token number">6</span>\n        f3<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    f2<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span>k<span class="token punctuation">)</span> <span class="token comment"># 4 6</span>\nf1<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>b <span class="token operator">=</span> <span class="token number">6</span>\n<span class="token keyword">def</span> <span class="token function">f2</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment"># UnboundLocalError: local variable &#39;b&#39; referenced before assignment</span>\n    b <span class="token operator">=</span> <span class="token number">9</span>\nf2<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>nonlocal</code> must bind an existing variable, while <code>global</code> can introduce new variable.</p>',6),e={},t=(0,a(3744).Z)(e,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);